name: Create Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        description: Release Type
        default: stable
        options:
          - stable
          - alpha
          - beta
          - rc

      continue_prerelease:
        type: boolean
        description: |
          Do not bump version number, increase pre-release revision number instead.
        default: false

      version_bump:
        type: choice
        description: Bump version number
        default: patch
        options:
          - patch
          - minor
          - major

      is_dry_run:
        type: boolean
        description: Dry Run

jobs:
  release-it:
    runs-on: ubuntu-latest
    steps:
      - uses: tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ secrets.RELEASE_BOT_APP_ID }}
          private_key: ${{ secrets.RELEASE_BOT_APP_PRIVATE_KEY }}

      - name: checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}
          fetch-depth: 0

      - name: initialize mandatory git config
        run: |
          git config user.name "GitHub Release Bot"
          git config user.email release-bot@neolution.ch

      - name: install release-it with plugins
        run: npm install -g release-it @release-it/keep-a-changelog

      - name: ensure CHANGELOG has Unreleased entries
        run: |
          # extract lines under '## [Unreleased]' until next header, remove header and blank lines
          if ! sed -n '/^## \[Unreleased\]/,/^## \[/{ /^##/d; /^\s*$/d; p }' CHANGELOG.md | grep -q .; then
            echo "::error::The [Unreleased] section is empty. Aborting release process."
            exit 1
          fi

      - name: run release-it
        run: |
          params=()

          if [[ "${{ github.event.inputs.release_type }}" == "stable" ]]; then
            params+=(--${{ github.event.inputs.version_bump }})
          elif [[ "${{ github.event.inputs.continue_prerelease }}" == "true" ]]; then
            # continue existing prerelease counter on patch bumps, otherwise bump to next minor/major prerelease
            if [[ "${{ github.event.inputs.version_bump }}" == "patch" ]]; then
              params+=(--preReleaseId=${{ github.event.inputs.release_type }})
              params+=(--increment=prerelease)
            elif [[ "${{ github.event.inputs.version_bump }}" == "minor" ]]; then
              params+=(--increment=preminor)
              params+=(--preReleaseId=${{ github.event.inputs.release_type }})
            else
              params+=(--increment=premajor)
              params+=(--preReleaseId=${{ github.event.inputs.release_type }})
            fi
            params+=(--preRelease=${{ github.event.inputs.release_type }})
            params+=(--git.tagMatch="*-${{ github.event.inputs.release_type }}.*")
            params+=(--plugins.@release-it/keep-a-changelog.keepUnreleased)
            params+=(--no-plugins.@release-it/keep-a-changelog.strictLatest)
          else
            # initial prerelease: bump to X.Y.Z and start at prerelease .0
            if [[ "${{ github.event.inputs.version_bump }}" == "patch" ]]; then
              params+=(--increment=prepatch)
            elif [[ "${{ github.event.inputs.version_bump }}" == "minor" ]]; then
              params+=(--increment=preminor)
            else
              params+=(--increment=premajor)
            fi
            params+=(--preReleaseId=${{ github.event.inputs.release_type }})
            params+=(--preRelease=${{ github.event.inputs.release_type }})
            params+=(--plugins.@release-it/keep-a-changelog.keepUnreleased)
            params+=(--no-plugins.@release-it/keep-a-changelog.strictLatest)
          fi

          if [[ "${{ github.event.inputs.is_dry_run }}" == "true" ]]; then
            params+=(--dry-run)
          fi

          params+=(--ci)

          echo "command: release-it ${params[@]}"
          release-it "${params[@]}"
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}